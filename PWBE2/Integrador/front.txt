
---

### ‚úÖ 1. **Tela inicial com a planta/imagem do pr√©dio**

**O que √©:**
Uma p√°gina inicial com a imagem do pr√©dio (como uma planta baixa), onde voc√™ vai visualizar e, mais tarde, interagir com os ambientes.

**O que estudar:**

* Importar e posicionar imagens no React.
* Trabalhar com CSS para responsividade (usando `position: absolute`, `relative`, `grid` ou `flex`).
* Manipular eventos de clique na imagem.

**Como implementar:**

1. Crie um componente chamado `PlantaEscola.jsx`.
2. Adicione a imagem do pr√©dio no React (ex: `<img src="/imagens/planta.png" />`).
3. Use `divs` ou `bot√µes transparentes` posicionados sobre a imagem nos locais dos sensores.

**Recursos para estudar:**

* [Manipulando imagens no React (Dev.to)](https://dev.to/producthackers/how-to-import-images-in-react-5b0o)
* [CSS Position explicado](https://www.w3schools.com/css/css_positioning.asp)

---

### ‚úÖ 2. **Mapa interativo para indicar os locais dos sensores**

**O que √©:**
Na imagem da planta, voc√™ ver√° pontos (como bolinhas ou √≠cones) que representam sensores. Ao clicar neles, voc√™ ver√° os dados daquele ambiente.

**O que estudar:**

* `onClick` em elementos React.
* Como passar dados ao clicar (props ou hooks como `useState`).
* √çcones (como o Lucide, Font Awesome ou SVGs).
* Componentiza√ß√£o (cada sensor pode ser um componente).

**Como implementar:**

1. Crie um componente `SensorPonto.jsx`.
2. Posicione v√°rios sensores com `<SensorPonto x="10" y="20" tipo="Temperatura" />`.
3. Ao clicar, exiba as informa√ß√µes com um modal ou painel lateral.

**Recursos:**

* [React Events - onClick](https://reactjs.org/docs/handling-events.html)
* [React Tooltip ou Modal (headlessui, Radix ou Shadcn/ui)](https://ui.shadcn.com)

---

### ‚úÖ 3. **Componentes de filtro (ambiente, hor√°rio, tipo de dado)**

**O que √©:**
Filtros s√£o caixas de sele√ß√£o, dropdowns ou bot√µes que permitem filtrar os dados por sensor, ambiente, intervalo de tempo, etc.

**O que estudar:**

* `useState` e `useEffect` para armazenar e atualizar filtros.
* Componentes de formul√°rio (select, input, date picker).
* Como enviar filtros para a API (via query string).

**Como implementar:**

1. Crie um estado para cada filtro (ex: ambiente, tipo, data).
2. Crie um bot√£o ‚ÄúFiltrar‚Äù que chama a API com os par√¢metros.
3. Exiba os resultados nos gr√°ficos.

**Recursos:**

* [Manipula√ß√£o de formul√°rios no React](https://reactjs.org/docs/forms.html)
* [React DatePicker](https://reactdatepicker.com/)
* [Axios (para enviar requisi√ß√µes)](https://axios-http.com/docs/intro)

---

### ‚úÖ 4. **Gr√°ficos com Chart.js ou Recharts**

**O que √©:**
Visualiza√ß√£o dos dados capturados por sensores em forma de gr√°ficos (barra, linha, pizza...).

**O que estudar:**

* Como instalar e usar Chart.js ou Recharts no React.
* Como passar dados din√¢micos para o gr√°fico.
* Como atualizar o gr√°fico quando os filtros forem alterados.

**Como implementar:**

1. Escolha uma biblioteca:

   * **[Recharts](https://recharts.org/en-US)** (f√°cil e feita para React)
   * **[Chart.js com React wrapper](https://react-chartjs-2.js.org/)**
2. Crie um componente `GraficoTemperatura.jsx`.
3. Receba os dados filtrados via props ou useEffect.
4. Monte o gr√°fico.

**Recursos:**

* [Recharts docs (exemplos prontos)](https://recharts.org/en-US/examples)
* [React Chart.js 2](https://react-chartjs-2.js.org/)

---

### üß† **Resumo de coisas para estudar/praticar:**

| Tema                  | Conte√∫do-chave                           |
| --------------------- | ---------------------------------------- |
| React B√°sico          | useState, useEffect, componentes, props  |
| Imagens e CSS         | posicionamento, responsividade           |
| Interatividade        | eventos onClick, exibir informa√ß√µes      |
| Formul√°rios e Filtros | input, select, date picker               |
| Consumo de API        | axios, useEffect, query string           |
| Gr√°ficos              | Recharts ou Chart.js com dados din√¢micos |

---

